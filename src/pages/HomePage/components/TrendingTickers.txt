import React, { useState, useEffect } from 'react';
import axios from 'axios';


const TrendingTickers: React.FC = () => {
    const [trendingTickers, setTrendingTickers] = useState<any>(null);
        
    useEffect(() => {
        const fetchData = async () => {
            try {
                const options = {
                    method: 'GET',
                    url: 'https://apidojo-yahoo-finance-v1.p.rapidapi.com/market/get-trending-tickers',
                    params: { region: 'US' },
                    headers: {
                        'X-RapidAPI-Key': '5eaedbb38bmsh367e02e2054b38fp1be9c2jsnb099746cda7f',
                        'X-RapidAPI-Host': 'apidojo-yahoo-finance-v1.p.rapidapi.com'
                    }
                };
                const response = await axios(options);
                setTrendingTickers(response.data.quotes);
                    
            } catch (error) {
                console.error(error);
            }
        };
        fetchData();
    }, []);
    console.log(trendingTickers);
    return (
        <div>
            {trendingTickers === null ? (
                <div>Loading...</div>
            ) : (
                <table className="display" style={{ width: '90%' }}>
                    <thead>
                        <tr>
                            <th>Symbol</th>
                            <th>Name</th>
                            <th>Trading</th>
                            <th>Last Price</th>
                            <th>Change %</th>
                        </tr>
                    </thead>
                    <tbody>
                        {trendingTickers.map((ticker: any) => {
                            console.log(ticker);
                            return (
                                <tr>
                                    <td>{ticker.symbol}</td>
                                    <td>{ticker.longName}</td>
                                    <td>{ticker.regularMarketPrice}</td>
                                    <td>{ticker.regularMarketPreviousClose}</td>
                                    <td>{ticker.regularMarketChangePercent}</td>
                                </tr>
                            );
                        })}
                    </tbody>
                </table>
            )}
        </div>
    );
    }
    export default TrendingTickers;